Public Class Form1
    Dim _pen As Pen = New Pen(Color.Black, 3)
    Dim shape As String
    ' Each polygon is represented by a List(Of Point).
    Private Polygons As List(Of Point) = Nothing
    Private ClippingWindow As List(Of Point) = Nothing
    ' Points for the new polygon.
    Private PolyPreview As List(Of Point) = Nothing
    Private ClippingWindowPreview As List(Of Point) = Nothing
    ' The current mouse position while drawing a new polygon.
    Private NewPoint As Point
    Private NewPointClip As Point
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles Me.Load

        pbCanvas.BackColor = Color.White

    End Sub

    Private Sub pbCanvas_MouseDown(sender As Object, e As MouseEventArgs) Handles pbCanvas.MouseDown
        If (shape = "Polygon") Then
            ' See if we are already drawing a polygon.
            If (PolyPreview IsNot Nothing) Then
                ' We are already drawing a polygon.
                ' If it's the right mouse button, finish this
                ' polygon.
                If (e.Button = MouseButtons.Right) Then
                    ' Finish this polygon.
                    If (PolyPreview.Count > 2) Then
                        Polygons = PolyPreview
                        PolyPreview = Nothing
                    End If
                Else
                    ' Add a point to this polygon.
                    If (PolyPreview(PolyPreview.Count - 1) <>
            e.Location) Then
                        PolyPreview.Add(e.Location)
                    End If
                End If
            Else
                ' Start a new polygon.
                PolyPreview = New List(Of Point)()
                NewPoint = e.Location
                PolyPreview.Add(e.Location)
            End If
        ElseIf (shape = "Rectangle") Then
            If (ClippingWindowPreview IsNot Nothing) Then
                ' We are already drawing a polygon.
                ' If it's the right mouse button, finish this
                ' polygon.
                If (e.Button = MouseButtons.Right) Then
                    ' Finish this polygon.
                    If (ClippingWindowPreview.Count > 2) Then
                        ClippingWindow = ClippingWindowPreview
                        ClippingWindowPreview = Nothing
                    End If
                Else
                    ' Add a point to this polygon.
                    If (ClippingWindowPreview(ClippingWindowPreview.Count - 1) <>
            e.Location) Then
                        ClippingWindowPreview.Add(e.Location)
                    End If
                End If
            Else
                ' Start a new polygon.
                ClippingWindowPreview = New List(Of Point)()
                NewPointClip = e.Location
                ClippingWindowPreview.Add(e.Location)
            End If
        End If
        ' Redraw.
        pbCanvas.Invalidate()
    End Sub

    Private Sub pbCanvas_MouseMove(sender As Object, e As MouseEventArgs) Handles pbCanvas.MouseMove
        If (shape = "Polygon") Then
            If (PolyPreview Is Nothing) Then Exit Sub
            NewPoint = e.Location
        ElseIf (shape = "Rectangle") Then
            If (ClippingWindowPreview Is Nothing) Then Exit Sub
            NewPointClip = e.Location
        End If
        pbCanvas.Invalidate()
    End Sub

    Private Sub pbCanvas_Paint(sender As Object, e As PaintEventArgs) Handles pbCanvas.Paint
        'e.Graphics.SmoothingMode = SmoothingMode.AntiAlias
        Try
            e.Graphics.DrawPolygon(Pens.Blue, Polygons.ToArray())
            e.Graphics.DrawPolygon(Pens.Black, ClippingWindow.ToArray())
        Catch ex As Exception

        End Try
        If (shape = "Polygon") Then
            ' Draw the new polygon.
            If (PolyPreview IsNot Nothing) Then
                ' Draw the new polygon.
                If (PolyPreview.Count > 1) Then
                    e.Graphics.DrawLines(Pens.Green,
                        PolyPreview.ToArray())
                End If

                ' Draw the newest edge.
                If (PolyPreview.Count > 0) Then
                    Using dashed_pen As New Pen(Color.Green)
                        dashed_pen.DashPattern = New Single() {3, 3}
                        e.Graphics.DrawLine(dashed_pen,
                            PolyPreview(PolyPreview.Count - 1),
                            NewPoint)
                    End Using
                End If
            End If
        ElseIf (shape = "Rectangle") Then
            ' Draw the new polygon.
            If (ClippingWindowPreview IsNot Nothing) Then
                ' Draw the new polygon.
                If (ClippingWindowPreview.Count > 1) Then
                    e.Graphics.DrawLines(Pens.Gray,
                        ClippingWindowPreview.ToArray())
                End If

                ' Draw the newest edge.
                If (ClippingWindowPreview.Count > 0) Then
                    Using dashed_pen As New Pen(Color.Green)
                        dashed_pen.DashPattern = New Single() {3, 3}
                        e.Graphics.DrawLine(dashed_pen,
                            ClippingWindowPreview(ClippingWindowPreview.Count - 1),
                            NewPoint)
                    End Using
                End If
            End If
        End If
    End Sub

    Private Sub btnPoly_MouseClick(sender As Object, e As MouseEventArgs) Handles btnPoly.MouseClick
        shape = "Polygon"
    End Sub

    Private Sub btnRect_MouseClick(sender As Object, e As MouseEventArgs) Handles btnRect.MouseClick
        shape = "Rectangle"
    End Sub

    Private Sub Delete_Clip()
        ClippingWindow = Nothing
    End Sub

    Private Sub Delete_Poly()
        Polygons = Nothing
    End Sub

    Private Sub btnDelClip_Click(sender As Object, e As EventArgs) Handles btnDelClip.Click
        Delete_Clip()
        pbCanvas.Refresh()
    End Sub

    Private Sub btnDelPoly_Click(sender As Object, e As EventArgs) Handles btnDelPoly.Click
        Delete_Poly()
        pbCanvas.Refresh()
    End Sub

    Private Sub btnClear_Click(sender As Object, e As EventArgs) Handles btnClear.Click
        Delete_Clip()
        Delete_Poly()
        pbCanvas.Refresh()
    End Sub
End Class